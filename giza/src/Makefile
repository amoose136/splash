# Makefile.in generated by automake 1.15 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/giza
pkgincludedir = $(includedir)/giza
pkglibdir = $(libdir)/giza
pkglibexecdir = $(libexecdir)/giza
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin15.5.0
host_triplet = x86_64-apple-darwin15.5.0
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = cpgplot.pc giza.pc pgplot.pc giza-version.h
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(fmoddir)" \
	"$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libcpgplot_la_LIBADD =
am_libcpgplot_la_OBJECTS = libcpgplot_la-giza-cpgplot.lo
libcpgplot_la_OBJECTS = $(am_libcpgplot_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libcpgplot_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libcpgplot_la_LDFLAGS) $(LDFLAGS) -o $@
libgiza_la_LIBADD =
am_libgiza_la_OBJECTS = libgiza_la-giza-annotate.lo \
	libgiza_la-giza-arrow-style.lo libgiza_la-giza-arrow.lo \
	libgiza_la-giza-band-style.lo libgiza_la-giza-band.lo \
	libgiza_la-giza-box-time.lo libgiza_la-giza-box.lo \
	libgiza_la-giza-buffering.lo libgiza_la-giza-character-size.lo \
	libgiza_la-giza-circle.lo libgiza_la-giza-clipping.lo \
	libgiza_la-giza-colour-bar.lo libgiza_la-giza-colour-index.lo \
	libgiza_la-giza-colour-palette.lo \
	libgiza_la-giza-colour-table.lo libgiza_la-giza-contour.lo \
	libgiza_la-giza-cursor-routines.lo \
	libgiza_la-giza-device-has-cursor.lo \
	libgiza_la-giza-draw-background.lo libgiza_la-giza-draw.lo \
	libgiza_la-giza-driver-eps.lo libgiza_la-giza-driver-null.lo \
	libgiza_la-giza-driver-pdf.lo libgiza_la-giza-driver-png.lo \
	libgiza_la-giza-driver-ps.lo libgiza_la-giza-driver-svg.lo \
	libgiza_la-giza-driver-xw.lo libgiza_la-giza-drivers.lo \
	libgiza_la-giza-environment.lo libgiza_la-giza-error-bars.lo \
	libgiza_la-giza-fill.lo libgiza_la-giza-format-number.lo \
	libgiza_la-giza-function-t.lo libgiza_la-giza-function-x.lo \
	libgiza_la-giza-function-y.lo libgiza_la-giza-get-key-press.lo \
	libgiza_la-giza-get-surface-size.lo libgiza_la-giza-io.lo \
	libgiza_la-giza-histogram.lo libgiza_la-giza-label.lo \
	libgiza_la-giza-line-cap.lo libgiza_la-giza-line-style.lo \
	libgiza_la-giza-line-width.lo libgiza_la-giza-line.lo \
	libgiza_la-giza-move.lo libgiza_la-giza-paper.lo \
	libgiza_la-giza-points.lo libgiza_la-giza-polygon.lo \
	libgiza_la-giza-print-id.lo libgiza_la-giza-prompting.lo \
	libgiza_la-giza-ptext.lo libgiza_la-giza-qtext.lo \
	libgiza_la-giza-rectangle.lo libgiza_la-giza-render.lo \
	libgiza_la-giza-save.lo libgiza_la-giza-set-font.lo \
	libgiza_la-giza-stroke.lo libgiza_la-giza-subpanel.lo \
	libgiza_la-giza-text-background.lo libgiza_la-giza-text.lo \
	libgiza_la-giza-transforms.lo libgiza_la-giza-vector.lo \
	libgiza_la-giza-viewport.lo libgiza_la-giza-version.lo \
	libgiza_la-giza-warnings.lo libgiza_la-giza-window.lo \
	libgiza_la-giza.lo libgiza_la-lex.yy.lo
libgiza_la_OBJECTS = $(am_libgiza_la_OBJECTS)
libgiza_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libgiza_la_LDFLAGS) $(LDFLAGS) -o $@
libpgplot_la_LIBADD =
am_libpgplot_la_OBJECTS = libpgplot_la-giza-fortran.lo giza-pgplot.lo
libpgplot_la_OBJECTS = $(am_libpgplot_la_OBJECTS)
libpgplot_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) \
	$(libpgplot_la_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
PPFCCOMPILE = $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS)
LTPPFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_FCFLAGS) $(FCFLAGS)
AM_V_PPFC = $(am__v_PPFC_$(V))
am__v_PPFC_ = $(am__v_PPFC_$(AM_DEFAULT_VERBOSITY))
am__v_PPFC_0 = @echo "  PPFC    " $@;
am__v_PPFC_1 = 
FCLD = $(FC)
FCLINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_FCLD = $(am__v_FCLD_$(V))
am__v_FCLD_ = $(am__v_FCLD_$(AM_DEFAULT_VERBOSITY))
am__v_FCLD_0 = @echo "  FCLD    " $@;
am__v_FCLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
LTFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(FC) $(AM_FCFLAGS) $(FCFLAGS)
AM_V_FC = $(am__v_FC_$(V))
am__v_FC_ = $(am__v_FC_$(AM_DEFAULT_VERBOSITY))
am__v_FC_0 = @echo "  FC      " $@;
am__v_FC_1 = 
SOURCES = $(libcpgplot_la_SOURCES) $(libgiza_la_SOURCES) \
	$(libpgplot_la_SOURCES)
DIST_SOURCES = $(libcpgplot_la_SOURCES) $(libgiza_la_SOURCES) \
	$(libpgplot_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(fmod_DATA) $(pkgconfig_DATA)
HEADERS = $(include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/cpgplot.pc.in \
	$(srcdir)/giza-version.h.in $(srcdir)/giza.pc.in \
	$(srcdir)/pgplot.pc.in $(top_srcdir)/build/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/amos/code/splash/giza/build/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /Users/amos/code/splash/giza/build/missing autoconf
AUTOHEADER = ${SHELL} /Users/amos/code/splash/giza/build/missing autoheader
AUTOMAKE = ${SHELL} /Users/amos/code/splash/giza/build/missing automake-1.15
AWK = awk
CAIRO_CFLAGS = -I/usr/X11//include
CAIRO_LIBS = -L/usr/X11//lib -lcairo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FC = gfortran
FCFLAGS = -g -O2
FGREP = /usr/bin/grep -F
GIZA_VERSION_MAJOR = 0
GIZA_VERSION_MICRO = 4
GIZA_VERSION_MINOR = 9
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LT_AGE = 1
LT_CURRENT = 1
LT_REVISION = 4
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = ${SHELL} /Users/amos/code/splash/giza/build/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = ../build/install-sh -c -d
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = false
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = giza
PACKAGE_BUGREPORT = daniel.price@monash.edu
PACKAGE_NAME = giza
PACKAGE_STRING = giza 0.9.4
PACKAGE_TARNAME = giza
PACKAGE_URL = http://giza.sf.net
PACKAGE_VERSION = 0.9.4
PATH_SEPARATOR = :
PKG_CONFIG = /usr/local/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.9.4
X11_CFLAGS = -I/usr/X11//include
X11_LIBS = -L/usr/X11//lib -lX11
abs_builddir = /Users/amos/code/splash/giza/src
abs_srcdir = /Users/amos/code/splash/giza/src
abs_top_builddir = /Users/amos/code/splash/giza
abs_top_srcdir = /Users/amos/code/splash/giza
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
ac_ct_FC = gfortran
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin15.5.0
build_alias = 
build_cpu = x86_64
build_os = darwin15.5.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin15.5.0
host_alias = 
host_cpu = x86_64
host_os = darwin15.5.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/amos/code/splash/giza/build/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /Users/amos/code/splash/build/../giza
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
CLEANFILES = *.mod *.pc
lib_LTLIBRARIES = libgiza.la libcpgplot.la libpgplot.la
libgiza_la_SOURCES = giza-annotate.c giza-arrow-style.c giza-arrow.c \
       giza-band-style.c giza-band.c giza-box-time.c giza-box.c \
       giza-buffering.c giza-character-size.c giza-circle.c \
       giza-clipping.c giza-colour-bar.c giza-colour-index.c \
       giza-colour-palette.c giza-colour-table.c giza-contour.c \
       giza-cursor-routines.c giza-device-has-cursor.c \
       giza-draw-background.c giza-draw.c giza-driver-eps.c \
       giza-driver-null.c giza-driver-pdf.c giza-driver-png.c \
       giza-driver-ps.c giza-driver-svg.c giza-driver-xw.c \
       giza-drivers.c giza-environment.c giza-error-bars.c giza-fill.c \
       giza-format-number.c giza-function-t.c giza-function-x.c \
       giza-function-y.c giza-get-key-press.c giza-get-surface-size.c \
       giza-io.c giza-histogram.c giza-label.c giza-line-cap.c \
       giza-line-style.c giza-line-width.c giza-line.c giza-move.c \
       giza-paper.c giza-points.c giza-polygon.c giza-print-id.c \
       giza-prompting.c giza-ptext.c giza-qtext.c giza-rectangle.c \
       giza-render.c giza-save.c giza-set-font.c giza-stroke.c \
       giza-subpanel.c giza-text-background.c giza-text.c \
       giza-transforms.c giza-vector.c giza-viewport.c giza-version.c \
       giza-warnings.c giza-window.c giza.c lex.yy.c \
       giza-arrow-style-private.h giza-driver-svg-private.h giza-stroke-private.h \
       giza-band-private.h giza-driver-xw-private.h giza-subpanel-private.h \
       giza-character-size-private.h giza-drivers-private.h giza-text-background-private.h \
       giza-colour-private.h giza-fill-private.h giza-text-private.h \
       giza-cursor-private.h giza-io-private.h giza-transforms-private.h \
       giza-driver-eps-private.h giza-line-style-private.h giza-version.h \
       giza-driver-null-private.h giza-private.h giza-viewport-private.h \
       giza-driver-pdf-private.h giza-render-private.h giza-warnings-private.h \
       giza-driver-png-private.h giza-set-font-private.h giza-window-private.h \
       giza-driver-ps-private.h giza-shared.h giza.h

libgiza_la_CPPFLAGS = $(X11_CFLAGS) $(CAIRO_CFLAGS)
libcpgplot_la_CPPFLAGS = $(libgiza_la_CPPFLAGS)
libpgplot_la_CPPFLAGS = $(libgiza_la_CPPFLAGS)
libgiza_la_LDFLAGS = -version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE) \
       -no-undefined $(X11_LIBS) $(CAIRO_LIBS)

libcpgplot_la_SOURCES = giza-cpgplot.c
libcpgplot_la_LDFLAGS = $(libgiza_la_LDFLAGS) -lgiza
libpgplot_la_SOURCES = giza-fortran.F90 giza-pgplot.f90
libpgplot_la_LDFLAGS = $(libcpgplot_la_LDFLAGS)
include_HEADERS = cpgplot.h giza.h giza-shared.h giza-version.h giza-fortran.F90
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = cpgplot.pc giza.pc pgplot.pc
fmoddir = $(libdir)/$(FC)/modules
fmod_DATA = giza.mod
all: all-am

.SUFFIXES:
.SUFFIXES: .F90 .c .f90 .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
cpgplot.pc: $(top_builddir)/config.status $(srcdir)/cpgplot.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
giza.pc: $(top_builddir)/config.status $(srcdir)/giza.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
pgplot.pc: $(top_builddir)/config.status $(srcdir)/pgplot.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
giza-version.h: $(top_builddir)/config.status $(srcdir)/giza-version.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libcpgplot.la: $(libcpgplot_la_OBJECTS) $(libcpgplot_la_DEPENDENCIES) $(EXTRA_libcpgplot_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libcpgplot_la_LINK) -rpath $(libdir) $(libcpgplot_la_OBJECTS) $(libcpgplot_la_LIBADD) $(LIBS)

libgiza.la: $(libgiza_la_OBJECTS) $(libgiza_la_DEPENDENCIES) $(EXTRA_libgiza_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libgiza_la_LINK) -rpath $(libdir) $(libgiza_la_OBJECTS) $(libgiza_la_LIBADD) $(LIBS)

libpgplot.la: $(libpgplot_la_OBJECTS) $(libpgplot_la_DEPENDENCIES) $(EXTRA_libpgplot_la_DEPENDENCIES) 
	$(AM_V_FCLD)$(libpgplot_la_LINK) -rpath $(libdir) $(libpgplot_la_OBJECTS) $(libpgplot_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libcpgplot_la-giza-cpgplot.Plo
include ./$(DEPDIR)/libgiza_la-giza-annotate.Plo
include ./$(DEPDIR)/libgiza_la-giza-arrow-style.Plo
include ./$(DEPDIR)/libgiza_la-giza-arrow.Plo
include ./$(DEPDIR)/libgiza_la-giza-band-style.Plo
include ./$(DEPDIR)/libgiza_la-giza-band.Plo
include ./$(DEPDIR)/libgiza_la-giza-box-time.Plo
include ./$(DEPDIR)/libgiza_la-giza-box.Plo
include ./$(DEPDIR)/libgiza_la-giza-buffering.Plo
include ./$(DEPDIR)/libgiza_la-giza-character-size.Plo
include ./$(DEPDIR)/libgiza_la-giza-circle.Plo
include ./$(DEPDIR)/libgiza_la-giza-clipping.Plo
include ./$(DEPDIR)/libgiza_la-giza-colour-bar.Plo
include ./$(DEPDIR)/libgiza_la-giza-colour-index.Plo
include ./$(DEPDIR)/libgiza_la-giza-colour-palette.Plo
include ./$(DEPDIR)/libgiza_la-giza-colour-table.Plo
include ./$(DEPDIR)/libgiza_la-giza-contour.Plo
include ./$(DEPDIR)/libgiza_la-giza-cursor-routines.Plo
include ./$(DEPDIR)/libgiza_la-giza-device-has-cursor.Plo
include ./$(DEPDIR)/libgiza_la-giza-draw-background.Plo
include ./$(DEPDIR)/libgiza_la-giza-draw.Plo
include ./$(DEPDIR)/libgiza_la-giza-driver-eps.Plo
include ./$(DEPDIR)/libgiza_la-giza-driver-null.Plo
include ./$(DEPDIR)/libgiza_la-giza-driver-pdf.Plo
include ./$(DEPDIR)/libgiza_la-giza-driver-png.Plo
include ./$(DEPDIR)/libgiza_la-giza-driver-ps.Plo
include ./$(DEPDIR)/libgiza_la-giza-driver-svg.Plo
include ./$(DEPDIR)/libgiza_la-giza-driver-xw.Plo
include ./$(DEPDIR)/libgiza_la-giza-drivers.Plo
include ./$(DEPDIR)/libgiza_la-giza-environment.Plo
include ./$(DEPDIR)/libgiza_la-giza-error-bars.Plo
include ./$(DEPDIR)/libgiza_la-giza-fill.Plo
include ./$(DEPDIR)/libgiza_la-giza-format-number.Plo
include ./$(DEPDIR)/libgiza_la-giza-function-t.Plo
include ./$(DEPDIR)/libgiza_la-giza-function-x.Plo
include ./$(DEPDIR)/libgiza_la-giza-function-y.Plo
include ./$(DEPDIR)/libgiza_la-giza-get-key-press.Plo
include ./$(DEPDIR)/libgiza_la-giza-get-surface-size.Plo
include ./$(DEPDIR)/libgiza_la-giza-histogram.Plo
include ./$(DEPDIR)/libgiza_la-giza-io.Plo
include ./$(DEPDIR)/libgiza_la-giza-label.Plo
include ./$(DEPDIR)/libgiza_la-giza-line-cap.Plo
include ./$(DEPDIR)/libgiza_la-giza-line-style.Plo
include ./$(DEPDIR)/libgiza_la-giza-line-width.Plo
include ./$(DEPDIR)/libgiza_la-giza-line.Plo
include ./$(DEPDIR)/libgiza_la-giza-move.Plo
include ./$(DEPDIR)/libgiza_la-giza-paper.Plo
include ./$(DEPDIR)/libgiza_la-giza-points.Plo
include ./$(DEPDIR)/libgiza_la-giza-polygon.Plo
include ./$(DEPDIR)/libgiza_la-giza-print-id.Plo
include ./$(DEPDIR)/libgiza_la-giza-prompting.Plo
include ./$(DEPDIR)/libgiza_la-giza-ptext.Plo
include ./$(DEPDIR)/libgiza_la-giza-qtext.Plo
include ./$(DEPDIR)/libgiza_la-giza-rectangle.Plo
include ./$(DEPDIR)/libgiza_la-giza-render.Plo
include ./$(DEPDIR)/libgiza_la-giza-save.Plo
include ./$(DEPDIR)/libgiza_la-giza-set-font.Plo
include ./$(DEPDIR)/libgiza_la-giza-stroke.Plo
include ./$(DEPDIR)/libgiza_la-giza-subpanel.Plo
include ./$(DEPDIR)/libgiza_la-giza-text-background.Plo
include ./$(DEPDIR)/libgiza_la-giza-text.Plo
include ./$(DEPDIR)/libgiza_la-giza-transforms.Plo
include ./$(DEPDIR)/libgiza_la-giza-vector.Plo
include ./$(DEPDIR)/libgiza_la-giza-version.Plo
include ./$(DEPDIR)/libgiza_la-giza-viewport.Plo
include ./$(DEPDIR)/libgiza_la-giza-warnings.Plo
include ./$(DEPDIR)/libgiza_la-giza-window.Plo
include ./$(DEPDIR)/libgiza_la-giza.Plo
include ./$(DEPDIR)/libgiza_la-lex.yy.Plo

.F90.o:
	$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ $<

.F90.obj:
	$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.F90.lo:
	$(AM_V_PPFC)$(LTPPFCCOMPILE) -c -o $@ $<

libpgplot_la-giza-fortran.lo: giza-fortran.F90
	$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpgplot_la_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o libpgplot_la-giza-fortran.lo `test -f 'giza-fortran.F90' || echo '$(srcdir)/'`giza-fortran.F90

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libcpgplot_la-giza-cpgplot.lo: giza-cpgplot.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcpgplot_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcpgplot_la-giza-cpgplot.lo -MD -MP -MF $(DEPDIR)/libcpgplot_la-giza-cpgplot.Tpo -c -o libcpgplot_la-giza-cpgplot.lo `test -f 'giza-cpgplot.c' || echo '$(srcdir)/'`giza-cpgplot.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcpgplot_la-giza-cpgplot.Tpo $(DEPDIR)/libcpgplot_la-giza-cpgplot.Plo
#	$(AM_V_CC)source='giza-cpgplot.c' object='libcpgplot_la-giza-cpgplot.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcpgplot_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcpgplot_la-giza-cpgplot.lo `test -f 'giza-cpgplot.c' || echo '$(srcdir)/'`giza-cpgplot.c

libgiza_la-giza-annotate.lo: giza-annotate.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-annotate.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-annotate.Tpo -c -o libgiza_la-giza-annotate.lo `test -f 'giza-annotate.c' || echo '$(srcdir)/'`giza-annotate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-annotate.Tpo $(DEPDIR)/libgiza_la-giza-annotate.Plo
#	$(AM_V_CC)source='giza-annotate.c' object='libgiza_la-giza-annotate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-annotate.lo `test -f 'giza-annotate.c' || echo '$(srcdir)/'`giza-annotate.c

libgiza_la-giza-arrow-style.lo: giza-arrow-style.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-arrow-style.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-arrow-style.Tpo -c -o libgiza_la-giza-arrow-style.lo `test -f 'giza-arrow-style.c' || echo '$(srcdir)/'`giza-arrow-style.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-arrow-style.Tpo $(DEPDIR)/libgiza_la-giza-arrow-style.Plo
#	$(AM_V_CC)source='giza-arrow-style.c' object='libgiza_la-giza-arrow-style.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-arrow-style.lo `test -f 'giza-arrow-style.c' || echo '$(srcdir)/'`giza-arrow-style.c

libgiza_la-giza-arrow.lo: giza-arrow.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-arrow.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-arrow.Tpo -c -o libgiza_la-giza-arrow.lo `test -f 'giza-arrow.c' || echo '$(srcdir)/'`giza-arrow.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-arrow.Tpo $(DEPDIR)/libgiza_la-giza-arrow.Plo
#	$(AM_V_CC)source='giza-arrow.c' object='libgiza_la-giza-arrow.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-arrow.lo `test -f 'giza-arrow.c' || echo '$(srcdir)/'`giza-arrow.c

libgiza_la-giza-band-style.lo: giza-band-style.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-band-style.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-band-style.Tpo -c -o libgiza_la-giza-band-style.lo `test -f 'giza-band-style.c' || echo '$(srcdir)/'`giza-band-style.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-band-style.Tpo $(DEPDIR)/libgiza_la-giza-band-style.Plo
#	$(AM_V_CC)source='giza-band-style.c' object='libgiza_la-giza-band-style.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-band-style.lo `test -f 'giza-band-style.c' || echo '$(srcdir)/'`giza-band-style.c

libgiza_la-giza-band.lo: giza-band.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-band.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-band.Tpo -c -o libgiza_la-giza-band.lo `test -f 'giza-band.c' || echo '$(srcdir)/'`giza-band.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-band.Tpo $(DEPDIR)/libgiza_la-giza-band.Plo
#	$(AM_V_CC)source='giza-band.c' object='libgiza_la-giza-band.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-band.lo `test -f 'giza-band.c' || echo '$(srcdir)/'`giza-band.c

libgiza_la-giza-box-time.lo: giza-box-time.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-box-time.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-box-time.Tpo -c -o libgiza_la-giza-box-time.lo `test -f 'giza-box-time.c' || echo '$(srcdir)/'`giza-box-time.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-box-time.Tpo $(DEPDIR)/libgiza_la-giza-box-time.Plo
#	$(AM_V_CC)source='giza-box-time.c' object='libgiza_la-giza-box-time.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-box-time.lo `test -f 'giza-box-time.c' || echo '$(srcdir)/'`giza-box-time.c

libgiza_la-giza-box.lo: giza-box.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-box.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-box.Tpo -c -o libgiza_la-giza-box.lo `test -f 'giza-box.c' || echo '$(srcdir)/'`giza-box.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-box.Tpo $(DEPDIR)/libgiza_la-giza-box.Plo
#	$(AM_V_CC)source='giza-box.c' object='libgiza_la-giza-box.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-box.lo `test -f 'giza-box.c' || echo '$(srcdir)/'`giza-box.c

libgiza_la-giza-buffering.lo: giza-buffering.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-buffering.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-buffering.Tpo -c -o libgiza_la-giza-buffering.lo `test -f 'giza-buffering.c' || echo '$(srcdir)/'`giza-buffering.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-buffering.Tpo $(DEPDIR)/libgiza_la-giza-buffering.Plo
#	$(AM_V_CC)source='giza-buffering.c' object='libgiza_la-giza-buffering.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-buffering.lo `test -f 'giza-buffering.c' || echo '$(srcdir)/'`giza-buffering.c

libgiza_la-giza-character-size.lo: giza-character-size.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-character-size.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-character-size.Tpo -c -o libgiza_la-giza-character-size.lo `test -f 'giza-character-size.c' || echo '$(srcdir)/'`giza-character-size.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-character-size.Tpo $(DEPDIR)/libgiza_la-giza-character-size.Plo
#	$(AM_V_CC)source='giza-character-size.c' object='libgiza_la-giza-character-size.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-character-size.lo `test -f 'giza-character-size.c' || echo '$(srcdir)/'`giza-character-size.c

libgiza_la-giza-circle.lo: giza-circle.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-circle.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-circle.Tpo -c -o libgiza_la-giza-circle.lo `test -f 'giza-circle.c' || echo '$(srcdir)/'`giza-circle.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-circle.Tpo $(DEPDIR)/libgiza_la-giza-circle.Plo
#	$(AM_V_CC)source='giza-circle.c' object='libgiza_la-giza-circle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-circle.lo `test -f 'giza-circle.c' || echo '$(srcdir)/'`giza-circle.c

libgiza_la-giza-clipping.lo: giza-clipping.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-clipping.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-clipping.Tpo -c -o libgiza_la-giza-clipping.lo `test -f 'giza-clipping.c' || echo '$(srcdir)/'`giza-clipping.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-clipping.Tpo $(DEPDIR)/libgiza_la-giza-clipping.Plo
#	$(AM_V_CC)source='giza-clipping.c' object='libgiza_la-giza-clipping.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-clipping.lo `test -f 'giza-clipping.c' || echo '$(srcdir)/'`giza-clipping.c

libgiza_la-giza-colour-bar.lo: giza-colour-bar.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-colour-bar.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-colour-bar.Tpo -c -o libgiza_la-giza-colour-bar.lo `test -f 'giza-colour-bar.c' || echo '$(srcdir)/'`giza-colour-bar.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-colour-bar.Tpo $(DEPDIR)/libgiza_la-giza-colour-bar.Plo
#	$(AM_V_CC)source='giza-colour-bar.c' object='libgiza_la-giza-colour-bar.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-colour-bar.lo `test -f 'giza-colour-bar.c' || echo '$(srcdir)/'`giza-colour-bar.c

libgiza_la-giza-colour-index.lo: giza-colour-index.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-colour-index.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-colour-index.Tpo -c -o libgiza_la-giza-colour-index.lo `test -f 'giza-colour-index.c' || echo '$(srcdir)/'`giza-colour-index.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-colour-index.Tpo $(DEPDIR)/libgiza_la-giza-colour-index.Plo
#	$(AM_V_CC)source='giza-colour-index.c' object='libgiza_la-giza-colour-index.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-colour-index.lo `test -f 'giza-colour-index.c' || echo '$(srcdir)/'`giza-colour-index.c

libgiza_la-giza-colour-palette.lo: giza-colour-palette.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-colour-palette.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-colour-palette.Tpo -c -o libgiza_la-giza-colour-palette.lo `test -f 'giza-colour-palette.c' || echo '$(srcdir)/'`giza-colour-palette.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-colour-palette.Tpo $(DEPDIR)/libgiza_la-giza-colour-palette.Plo
#	$(AM_V_CC)source='giza-colour-palette.c' object='libgiza_la-giza-colour-palette.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-colour-palette.lo `test -f 'giza-colour-palette.c' || echo '$(srcdir)/'`giza-colour-palette.c

libgiza_la-giza-colour-table.lo: giza-colour-table.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-colour-table.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-colour-table.Tpo -c -o libgiza_la-giza-colour-table.lo `test -f 'giza-colour-table.c' || echo '$(srcdir)/'`giza-colour-table.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-colour-table.Tpo $(DEPDIR)/libgiza_la-giza-colour-table.Plo
#	$(AM_V_CC)source='giza-colour-table.c' object='libgiza_la-giza-colour-table.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-colour-table.lo `test -f 'giza-colour-table.c' || echo '$(srcdir)/'`giza-colour-table.c

libgiza_la-giza-contour.lo: giza-contour.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-contour.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-contour.Tpo -c -o libgiza_la-giza-contour.lo `test -f 'giza-contour.c' || echo '$(srcdir)/'`giza-contour.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-contour.Tpo $(DEPDIR)/libgiza_la-giza-contour.Plo
#	$(AM_V_CC)source='giza-contour.c' object='libgiza_la-giza-contour.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-contour.lo `test -f 'giza-contour.c' || echo '$(srcdir)/'`giza-contour.c

libgiza_la-giza-cursor-routines.lo: giza-cursor-routines.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-cursor-routines.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-cursor-routines.Tpo -c -o libgiza_la-giza-cursor-routines.lo `test -f 'giza-cursor-routines.c' || echo '$(srcdir)/'`giza-cursor-routines.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-cursor-routines.Tpo $(DEPDIR)/libgiza_la-giza-cursor-routines.Plo
#	$(AM_V_CC)source='giza-cursor-routines.c' object='libgiza_la-giza-cursor-routines.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-cursor-routines.lo `test -f 'giza-cursor-routines.c' || echo '$(srcdir)/'`giza-cursor-routines.c

libgiza_la-giza-device-has-cursor.lo: giza-device-has-cursor.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-device-has-cursor.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-device-has-cursor.Tpo -c -o libgiza_la-giza-device-has-cursor.lo `test -f 'giza-device-has-cursor.c' || echo '$(srcdir)/'`giza-device-has-cursor.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-device-has-cursor.Tpo $(DEPDIR)/libgiza_la-giza-device-has-cursor.Plo
#	$(AM_V_CC)source='giza-device-has-cursor.c' object='libgiza_la-giza-device-has-cursor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-device-has-cursor.lo `test -f 'giza-device-has-cursor.c' || echo '$(srcdir)/'`giza-device-has-cursor.c

libgiza_la-giza-draw-background.lo: giza-draw-background.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-draw-background.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-draw-background.Tpo -c -o libgiza_la-giza-draw-background.lo `test -f 'giza-draw-background.c' || echo '$(srcdir)/'`giza-draw-background.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-draw-background.Tpo $(DEPDIR)/libgiza_la-giza-draw-background.Plo
#	$(AM_V_CC)source='giza-draw-background.c' object='libgiza_la-giza-draw-background.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-draw-background.lo `test -f 'giza-draw-background.c' || echo '$(srcdir)/'`giza-draw-background.c

libgiza_la-giza-draw.lo: giza-draw.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-draw.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-draw.Tpo -c -o libgiza_la-giza-draw.lo `test -f 'giza-draw.c' || echo '$(srcdir)/'`giza-draw.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-draw.Tpo $(DEPDIR)/libgiza_la-giza-draw.Plo
#	$(AM_V_CC)source='giza-draw.c' object='libgiza_la-giza-draw.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-draw.lo `test -f 'giza-draw.c' || echo '$(srcdir)/'`giza-draw.c

libgiza_la-giza-driver-eps.lo: giza-driver-eps.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-driver-eps.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-driver-eps.Tpo -c -o libgiza_la-giza-driver-eps.lo `test -f 'giza-driver-eps.c' || echo '$(srcdir)/'`giza-driver-eps.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-driver-eps.Tpo $(DEPDIR)/libgiza_la-giza-driver-eps.Plo
#	$(AM_V_CC)source='giza-driver-eps.c' object='libgiza_la-giza-driver-eps.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-driver-eps.lo `test -f 'giza-driver-eps.c' || echo '$(srcdir)/'`giza-driver-eps.c

libgiza_la-giza-driver-null.lo: giza-driver-null.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-driver-null.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-driver-null.Tpo -c -o libgiza_la-giza-driver-null.lo `test -f 'giza-driver-null.c' || echo '$(srcdir)/'`giza-driver-null.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-driver-null.Tpo $(DEPDIR)/libgiza_la-giza-driver-null.Plo
#	$(AM_V_CC)source='giza-driver-null.c' object='libgiza_la-giza-driver-null.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-driver-null.lo `test -f 'giza-driver-null.c' || echo '$(srcdir)/'`giza-driver-null.c

libgiza_la-giza-driver-pdf.lo: giza-driver-pdf.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-driver-pdf.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-driver-pdf.Tpo -c -o libgiza_la-giza-driver-pdf.lo `test -f 'giza-driver-pdf.c' || echo '$(srcdir)/'`giza-driver-pdf.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-driver-pdf.Tpo $(DEPDIR)/libgiza_la-giza-driver-pdf.Plo
#	$(AM_V_CC)source='giza-driver-pdf.c' object='libgiza_la-giza-driver-pdf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-driver-pdf.lo `test -f 'giza-driver-pdf.c' || echo '$(srcdir)/'`giza-driver-pdf.c

libgiza_la-giza-driver-png.lo: giza-driver-png.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-driver-png.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-driver-png.Tpo -c -o libgiza_la-giza-driver-png.lo `test -f 'giza-driver-png.c' || echo '$(srcdir)/'`giza-driver-png.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-driver-png.Tpo $(DEPDIR)/libgiza_la-giza-driver-png.Plo
#	$(AM_V_CC)source='giza-driver-png.c' object='libgiza_la-giza-driver-png.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-driver-png.lo `test -f 'giza-driver-png.c' || echo '$(srcdir)/'`giza-driver-png.c

libgiza_la-giza-driver-ps.lo: giza-driver-ps.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-driver-ps.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-driver-ps.Tpo -c -o libgiza_la-giza-driver-ps.lo `test -f 'giza-driver-ps.c' || echo '$(srcdir)/'`giza-driver-ps.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-driver-ps.Tpo $(DEPDIR)/libgiza_la-giza-driver-ps.Plo
#	$(AM_V_CC)source='giza-driver-ps.c' object='libgiza_la-giza-driver-ps.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-driver-ps.lo `test -f 'giza-driver-ps.c' || echo '$(srcdir)/'`giza-driver-ps.c

libgiza_la-giza-driver-svg.lo: giza-driver-svg.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-driver-svg.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-driver-svg.Tpo -c -o libgiza_la-giza-driver-svg.lo `test -f 'giza-driver-svg.c' || echo '$(srcdir)/'`giza-driver-svg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-driver-svg.Tpo $(DEPDIR)/libgiza_la-giza-driver-svg.Plo
#	$(AM_V_CC)source='giza-driver-svg.c' object='libgiza_la-giza-driver-svg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-driver-svg.lo `test -f 'giza-driver-svg.c' || echo '$(srcdir)/'`giza-driver-svg.c

libgiza_la-giza-driver-xw.lo: giza-driver-xw.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-driver-xw.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-driver-xw.Tpo -c -o libgiza_la-giza-driver-xw.lo `test -f 'giza-driver-xw.c' || echo '$(srcdir)/'`giza-driver-xw.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-driver-xw.Tpo $(DEPDIR)/libgiza_la-giza-driver-xw.Plo
#	$(AM_V_CC)source='giza-driver-xw.c' object='libgiza_la-giza-driver-xw.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-driver-xw.lo `test -f 'giza-driver-xw.c' || echo '$(srcdir)/'`giza-driver-xw.c

libgiza_la-giza-drivers.lo: giza-drivers.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-drivers.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-drivers.Tpo -c -o libgiza_la-giza-drivers.lo `test -f 'giza-drivers.c' || echo '$(srcdir)/'`giza-drivers.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-drivers.Tpo $(DEPDIR)/libgiza_la-giza-drivers.Plo
#	$(AM_V_CC)source='giza-drivers.c' object='libgiza_la-giza-drivers.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-drivers.lo `test -f 'giza-drivers.c' || echo '$(srcdir)/'`giza-drivers.c

libgiza_la-giza-environment.lo: giza-environment.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-environment.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-environment.Tpo -c -o libgiza_la-giza-environment.lo `test -f 'giza-environment.c' || echo '$(srcdir)/'`giza-environment.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-environment.Tpo $(DEPDIR)/libgiza_la-giza-environment.Plo
#	$(AM_V_CC)source='giza-environment.c' object='libgiza_la-giza-environment.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-environment.lo `test -f 'giza-environment.c' || echo '$(srcdir)/'`giza-environment.c

libgiza_la-giza-error-bars.lo: giza-error-bars.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-error-bars.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-error-bars.Tpo -c -o libgiza_la-giza-error-bars.lo `test -f 'giza-error-bars.c' || echo '$(srcdir)/'`giza-error-bars.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-error-bars.Tpo $(DEPDIR)/libgiza_la-giza-error-bars.Plo
#	$(AM_V_CC)source='giza-error-bars.c' object='libgiza_la-giza-error-bars.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-error-bars.lo `test -f 'giza-error-bars.c' || echo '$(srcdir)/'`giza-error-bars.c

libgiza_la-giza-fill.lo: giza-fill.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-fill.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-fill.Tpo -c -o libgiza_la-giza-fill.lo `test -f 'giza-fill.c' || echo '$(srcdir)/'`giza-fill.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-fill.Tpo $(DEPDIR)/libgiza_la-giza-fill.Plo
#	$(AM_V_CC)source='giza-fill.c' object='libgiza_la-giza-fill.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-fill.lo `test -f 'giza-fill.c' || echo '$(srcdir)/'`giza-fill.c

libgiza_la-giza-format-number.lo: giza-format-number.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-format-number.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-format-number.Tpo -c -o libgiza_la-giza-format-number.lo `test -f 'giza-format-number.c' || echo '$(srcdir)/'`giza-format-number.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-format-number.Tpo $(DEPDIR)/libgiza_la-giza-format-number.Plo
#	$(AM_V_CC)source='giza-format-number.c' object='libgiza_la-giza-format-number.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-format-number.lo `test -f 'giza-format-number.c' || echo '$(srcdir)/'`giza-format-number.c

libgiza_la-giza-function-t.lo: giza-function-t.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-function-t.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-function-t.Tpo -c -o libgiza_la-giza-function-t.lo `test -f 'giza-function-t.c' || echo '$(srcdir)/'`giza-function-t.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-function-t.Tpo $(DEPDIR)/libgiza_la-giza-function-t.Plo
#	$(AM_V_CC)source='giza-function-t.c' object='libgiza_la-giza-function-t.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-function-t.lo `test -f 'giza-function-t.c' || echo '$(srcdir)/'`giza-function-t.c

libgiza_la-giza-function-x.lo: giza-function-x.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-function-x.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-function-x.Tpo -c -o libgiza_la-giza-function-x.lo `test -f 'giza-function-x.c' || echo '$(srcdir)/'`giza-function-x.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-function-x.Tpo $(DEPDIR)/libgiza_la-giza-function-x.Plo
#	$(AM_V_CC)source='giza-function-x.c' object='libgiza_la-giza-function-x.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-function-x.lo `test -f 'giza-function-x.c' || echo '$(srcdir)/'`giza-function-x.c

libgiza_la-giza-function-y.lo: giza-function-y.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-function-y.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-function-y.Tpo -c -o libgiza_la-giza-function-y.lo `test -f 'giza-function-y.c' || echo '$(srcdir)/'`giza-function-y.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-function-y.Tpo $(DEPDIR)/libgiza_la-giza-function-y.Plo
#	$(AM_V_CC)source='giza-function-y.c' object='libgiza_la-giza-function-y.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-function-y.lo `test -f 'giza-function-y.c' || echo '$(srcdir)/'`giza-function-y.c

libgiza_la-giza-get-key-press.lo: giza-get-key-press.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-get-key-press.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-get-key-press.Tpo -c -o libgiza_la-giza-get-key-press.lo `test -f 'giza-get-key-press.c' || echo '$(srcdir)/'`giza-get-key-press.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-get-key-press.Tpo $(DEPDIR)/libgiza_la-giza-get-key-press.Plo
#	$(AM_V_CC)source='giza-get-key-press.c' object='libgiza_la-giza-get-key-press.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-get-key-press.lo `test -f 'giza-get-key-press.c' || echo '$(srcdir)/'`giza-get-key-press.c

libgiza_la-giza-get-surface-size.lo: giza-get-surface-size.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-get-surface-size.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-get-surface-size.Tpo -c -o libgiza_la-giza-get-surface-size.lo `test -f 'giza-get-surface-size.c' || echo '$(srcdir)/'`giza-get-surface-size.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-get-surface-size.Tpo $(DEPDIR)/libgiza_la-giza-get-surface-size.Plo
#	$(AM_V_CC)source='giza-get-surface-size.c' object='libgiza_la-giza-get-surface-size.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-get-surface-size.lo `test -f 'giza-get-surface-size.c' || echo '$(srcdir)/'`giza-get-surface-size.c

libgiza_la-giza-io.lo: giza-io.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-io.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-io.Tpo -c -o libgiza_la-giza-io.lo `test -f 'giza-io.c' || echo '$(srcdir)/'`giza-io.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-io.Tpo $(DEPDIR)/libgiza_la-giza-io.Plo
#	$(AM_V_CC)source='giza-io.c' object='libgiza_la-giza-io.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-io.lo `test -f 'giza-io.c' || echo '$(srcdir)/'`giza-io.c

libgiza_la-giza-histogram.lo: giza-histogram.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-histogram.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-histogram.Tpo -c -o libgiza_la-giza-histogram.lo `test -f 'giza-histogram.c' || echo '$(srcdir)/'`giza-histogram.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-histogram.Tpo $(DEPDIR)/libgiza_la-giza-histogram.Plo
#	$(AM_V_CC)source='giza-histogram.c' object='libgiza_la-giza-histogram.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-histogram.lo `test -f 'giza-histogram.c' || echo '$(srcdir)/'`giza-histogram.c

libgiza_la-giza-label.lo: giza-label.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-label.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-label.Tpo -c -o libgiza_la-giza-label.lo `test -f 'giza-label.c' || echo '$(srcdir)/'`giza-label.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-label.Tpo $(DEPDIR)/libgiza_la-giza-label.Plo
#	$(AM_V_CC)source='giza-label.c' object='libgiza_la-giza-label.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-label.lo `test -f 'giza-label.c' || echo '$(srcdir)/'`giza-label.c

libgiza_la-giza-line-cap.lo: giza-line-cap.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-line-cap.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-line-cap.Tpo -c -o libgiza_la-giza-line-cap.lo `test -f 'giza-line-cap.c' || echo '$(srcdir)/'`giza-line-cap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-line-cap.Tpo $(DEPDIR)/libgiza_la-giza-line-cap.Plo
#	$(AM_V_CC)source='giza-line-cap.c' object='libgiza_la-giza-line-cap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-line-cap.lo `test -f 'giza-line-cap.c' || echo '$(srcdir)/'`giza-line-cap.c

libgiza_la-giza-line-style.lo: giza-line-style.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-line-style.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-line-style.Tpo -c -o libgiza_la-giza-line-style.lo `test -f 'giza-line-style.c' || echo '$(srcdir)/'`giza-line-style.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-line-style.Tpo $(DEPDIR)/libgiza_la-giza-line-style.Plo
#	$(AM_V_CC)source='giza-line-style.c' object='libgiza_la-giza-line-style.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-line-style.lo `test -f 'giza-line-style.c' || echo '$(srcdir)/'`giza-line-style.c

libgiza_la-giza-line-width.lo: giza-line-width.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-line-width.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-line-width.Tpo -c -o libgiza_la-giza-line-width.lo `test -f 'giza-line-width.c' || echo '$(srcdir)/'`giza-line-width.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-line-width.Tpo $(DEPDIR)/libgiza_la-giza-line-width.Plo
#	$(AM_V_CC)source='giza-line-width.c' object='libgiza_la-giza-line-width.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-line-width.lo `test -f 'giza-line-width.c' || echo '$(srcdir)/'`giza-line-width.c

libgiza_la-giza-line.lo: giza-line.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-line.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-line.Tpo -c -o libgiza_la-giza-line.lo `test -f 'giza-line.c' || echo '$(srcdir)/'`giza-line.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-line.Tpo $(DEPDIR)/libgiza_la-giza-line.Plo
#	$(AM_V_CC)source='giza-line.c' object='libgiza_la-giza-line.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-line.lo `test -f 'giza-line.c' || echo '$(srcdir)/'`giza-line.c

libgiza_la-giza-move.lo: giza-move.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-move.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-move.Tpo -c -o libgiza_la-giza-move.lo `test -f 'giza-move.c' || echo '$(srcdir)/'`giza-move.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-move.Tpo $(DEPDIR)/libgiza_la-giza-move.Plo
#	$(AM_V_CC)source='giza-move.c' object='libgiza_la-giza-move.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-move.lo `test -f 'giza-move.c' || echo '$(srcdir)/'`giza-move.c

libgiza_la-giza-paper.lo: giza-paper.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-paper.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-paper.Tpo -c -o libgiza_la-giza-paper.lo `test -f 'giza-paper.c' || echo '$(srcdir)/'`giza-paper.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-paper.Tpo $(DEPDIR)/libgiza_la-giza-paper.Plo
#	$(AM_V_CC)source='giza-paper.c' object='libgiza_la-giza-paper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-paper.lo `test -f 'giza-paper.c' || echo '$(srcdir)/'`giza-paper.c

libgiza_la-giza-points.lo: giza-points.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-points.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-points.Tpo -c -o libgiza_la-giza-points.lo `test -f 'giza-points.c' || echo '$(srcdir)/'`giza-points.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-points.Tpo $(DEPDIR)/libgiza_la-giza-points.Plo
#	$(AM_V_CC)source='giza-points.c' object='libgiza_la-giza-points.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-points.lo `test -f 'giza-points.c' || echo '$(srcdir)/'`giza-points.c

libgiza_la-giza-polygon.lo: giza-polygon.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-polygon.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-polygon.Tpo -c -o libgiza_la-giza-polygon.lo `test -f 'giza-polygon.c' || echo '$(srcdir)/'`giza-polygon.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-polygon.Tpo $(DEPDIR)/libgiza_la-giza-polygon.Plo
#	$(AM_V_CC)source='giza-polygon.c' object='libgiza_la-giza-polygon.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-polygon.lo `test -f 'giza-polygon.c' || echo '$(srcdir)/'`giza-polygon.c

libgiza_la-giza-print-id.lo: giza-print-id.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-print-id.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-print-id.Tpo -c -o libgiza_la-giza-print-id.lo `test -f 'giza-print-id.c' || echo '$(srcdir)/'`giza-print-id.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-print-id.Tpo $(DEPDIR)/libgiza_la-giza-print-id.Plo
#	$(AM_V_CC)source='giza-print-id.c' object='libgiza_la-giza-print-id.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-print-id.lo `test -f 'giza-print-id.c' || echo '$(srcdir)/'`giza-print-id.c

libgiza_la-giza-prompting.lo: giza-prompting.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-prompting.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-prompting.Tpo -c -o libgiza_la-giza-prompting.lo `test -f 'giza-prompting.c' || echo '$(srcdir)/'`giza-prompting.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-prompting.Tpo $(DEPDIR)/libgiza_la-giza-prompting.Plo
#	$(AM_V_CC)source='giza-prompting.c' object='libgiza_la-giza-prompting.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-prompting.lo `test -f 'giza-prompting.c' || echo '$(srcdir)/'`giza-prompting.c

libgiza_la-giza-ptext.lo: giza-ptext.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-ptext.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-ptext.Tpo -c -o libgiza_la-giza-ptext.lo `test -f 'giza-ptext.c' || echo '$(srcdir)/'`giza-ptext.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-ptext.Tpo $(DEPDIR)/libgiza_la-giza-ptext.Plo
#	$(AM_V_CC)source='giza-ptext.c' object='libgiza_la-giza-ptext.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-ptext.lo `test -f 'giza-ptext.c' || echo '$(srcdir)/'`giza-ptext.c

libgiza_la-giza-qtext.lo: giza-qtext.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-qtext.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-qtext.Tpo -c -o libgiza_la-giza-qtext.lo `test -f 'giza-qtext.c' || echo '$(srcdir)/'`giza-qtext.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-qtext.Tpo $(DEPDIR)/libgiza_la-giza-qtext.Plo
#	$(AM_V_CC)source='giza-qtext.c' object='libgiza_la-giza-qtext.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-qtext.lo `test -f 'giza-qtext.c' || echo '$(srcdir)/'`giza-qtext.c

libgiza_la-giza-rectangle.lo: giza-rectangle.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-rectangle.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-rectangle.Tpo -c -o libgiza_la-giza-rectangle.lo `test -f 'giza-rectangle.c' || echo '$(srcdir)/'`giza-rectangle.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-rectangle.Tpo $(DEPDIR)/libgiza_la-giza-rectangle.Plo
#	$(AM_V_CC)source='giza-rectangle.c' object='libgiza_la-giza-rectangle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-rectangle.lo `test -f 'giza-rectangle.c' || echo '$(srcdir)/'`giza-rectangle.c

libgiza_la-giza-render.lo: giza-render.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-render.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-render.Tpo -c -o libgiza_la-giza-render.lo `test -f 'giza-render.c' || echo '$(srcdir)/'`giza-render.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-render.Tpo $(DEPDIR)/libgiza_la-giza-render.Plo
#	$(AM_V_CC)source='giza-render.c' object='libgiza_la-giza-render.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-render.lo `test -f 'giza-render.c' || echo '$(srcdir)/'`giza-render.c

libgiza_la-giza-save.lo: giza-save.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-save.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-save.Tpo -c -o libgiza_la-giza-save.lo `test -f 'giza-save.c' || echo '$(srcdir)/'`giza-save.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-save.Tpo $(DEPDIR)/libgiza_la-giza-save.Plo
#	$(AM_V_CC)source='giza-save.c' object='libgiza_la-giza-save.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-save.lo `test -f 'giza-save.c' || echo '$(srcdir)/'`giza-save.c

libgiza_la-giza-set-font.lo: giza-set-font.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-set-font.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-set-font.Tpo -c -o libgiza_la-giza-set-font.lo `test -f 'giza-set-font.c' || echo '$(srcdir)/'`giza-set-font.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-set-font.Tpo $(DEPDIR)/libgiza_la-giza-set-font.Plo
#	$(AM_V_CC)source='giza-set-font.c' object='libgiza_la-giza-set-font.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-set-font.lo `test -f 'giza-set-font.c' || echo '$(srcdir)/'`giza-set-font.c

libgiza_la-giza-stroke.lo: giza-stroke.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-stroke.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-stroke.Tpo -c -o libgiza_la-giza-stroke.lo `test -f 'giza-stroke.c' || echo '$(srcdir)/'`giza-stroke.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-stroke.Tpo $(DEPDIR)/libgiza_la-giza-stroke.Plo
#	$(AM_V_CC)source='giza-stroke.c' object='libgiza_la-giza-stroke.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-stroke.lo `test -f 'giza-stroke.c' || echo '$(srcdir)/'`giza-stroke.c

libgiza_la-giza-subpanel.lo: giza-subpanel.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-subpanel.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-subpanel.Tpo -c -o libgiza_la-giza-subpanel.lo `test -f 'giza-subpanel.c' || echo '$(srcdir)/'`giza-subpanel.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-subpanel.Tpo $(DEPDIR)/libgiza_la-giza-subpanel.Plo
#	$(AM_V_CC)source='giza-subpanel.c' object='libgiza_la-giza-subpanel.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-subpanel.lo `test -f 'giza-subpanel.c' || echo '$(srcdir)/'`giza-subpanel.c

libgiza_la-giza-text-background.lo: giza-text-background.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-text-background.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-text-background.Tpo -c -o libgiza_la-giza-text-background.lo `test -f 'giza-text-background.c' || echo '$(srcdir)/'`giza-text-background.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-text-background.Tpo $(DEPDIR)/libgiza_la-giza-text-background.Plo
#	$(AM_V_CC)source='giza-text-background.c' object='libgiza_la-giza-text-background.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-text-background.lo `test -f 'giza-text-background.c' || echo '$(srcdir)/'`giza-text-background.c

libgiza_la-giza-text.lo: giza-text.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-text.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-text.Tpo -c -o libgiza_la-giza-text.lo `test -f 'giza-text.c' || echo '$(srcdir)/'`giza-text.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-text.Tpo $(DEPDIR)/libgiza_la-giza-text.Plo
#	$(AM_V_CC)source='giza-text.c' object='libgiza_la-giza-text.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-text.lo `test -f 'giza-text.c' || echo '$(srcdir)/'`giza-text.c

libgiza_la-giza-transforms.lo: giza-transforms.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-transforms.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-transforms.Tpo -c -o libgiza_la-giza-transforms.lo `test -f 'giza-transforms.c' || echo '$(srcdir)/'`giza-transforms.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-transforms.Tpo $(DEPDIR)/libgiza_la-giza-transforms.Plo
#	$(AM_V_CC)source='giza-transforms.c' object='libgiza_la-giza-transforms.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-transforms.lo `test -f 'giza-transforms.c' || echo '$(srcdir)/'`giza-transforms.c

libgiza_la-giza-vector.lo: giza-vector.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-vector.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-vector.Tpo -c -o libgiza_la-giza-vector.lo `test -f 'giza-vector.c' || echo '$(srcdir)/'`giza-vector.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-vector.Tpo $(DEPDIR)/libgiza_la-giza-vector.Plo
#	$(AM_V_CC)source='giza-vector.c' object='libgiza_la-giza-vector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-vector.lo `test -f 'giza-vector.c' || echo '$(srcdir)/'`giza-vector.c

libgiza_la-giza-viewport.lo: giza-viewport.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-viewport.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-viewport.Tpo -c -o libgiza_la-giza-viewport.lo `test -f 'giza-viewport.c' || echo '$(srcdir)/'`giza-viewport.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-viewport.Tpo $(DEPDIR)/libgiza_la-giza-viewport.Plo
#	$(AM_V_CC)source='giza-viewport.c' object='libgiza_la-giza-viewport.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-viewport.lo `test -f 'giza-viewport.c' || echo '$(srcdir)/'`giza-viewport.c

libgiza_la-giza-version.lo: giza-version.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-version.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-version.Tpo -c -o libgiza_la-giza-version.lo `test -f 'giza-version.c' || echo '$(srcdir)/'`giza-version.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-version.Tpo $(DEPDIR)/libgiza_la-giza-version.Plo
#	$(AM_V_CC)source='giza-version.c' object='libgiza_la-giza-version.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-version.lo `test -f 'giza-version.c' || echo '$(srcdir)/'`giza-version.c

libgiza_la-giza-warnings.lo: giza-warnings.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-warnings.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-warnings.Tpo -c -o libgiza_la-giza-warnings.lo `test -f 'giza-warnings.c' || echo '$(srcdir)/'`giza-warnings.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-warnings.Tpo $(DEPDIR)/libgiza_la-giza-warnings.Plo
#	$(AM_V_CC)source='giza-warnings.c' object='libgiza_la-giza-warnings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-warnings.lo `test -f 'giza-warnings.c' || echo '$(srcdir)/'`giza-warnings.c

libgiza_la-giza-window.lo: giza-window.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza-window.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza-window.Tpo -c -o libgiza_la-giza-window.lo `test -f 'giza-window.c' || echo '$(srcdir)/'`giza-window.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza-window.Tpo $(DEPDIR)/libgiza_la-giza-window.Plo
#	$(AM_V_CC)source='giza-window.c' object='libgiza_la-giza-window.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza-window.lo `test -f 'giza-window.c' || echo '$(srcdir)/'`giza-window.c

libgiza_la-giza.lo: giza.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-giza.lo -MD -MP -MF $(DEPDIR)/libgiza_la-giza.Tpo -c -o libgiza_la-giza.lo `test -f 'giza.c' || echo '$(srcdir)/'`giza.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-giza.Tpo $(DEPDIR)/libgiza_la-giza.Plo
#	$(AM_V_CC)source='giza.c' object='libgiza_la-giza.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-giza.lo `test -f 'giza.c' || echo '$(srcdir)/'`giza.c

libgiza_la-lex.yy.lo: lex.yy.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgiza_la-lex.yy.lo -MD -MP -MF $(DEPDIR)/libgiza_la-lex.yy.Tpo -c -o libgiza_la-lex.yy.lo `test -f 'lex.yy.c' || echo '$(srcdir)/'`lex.yy.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libgiza_la-lex.yy.Tpo $(DEPDIR)/libgiza_la-lex.yy.Plo
#	$(AM_V_CC)source='lex.yy.c' object='libgiza_la-lex.yy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgiza_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgiza_la-lex.yy.lo `test -f 'lex.yy.c' || echo '$(srcdir)/'`lex.yy.c

.f90.o:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ $<

.f90.obj:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f90.lo:
	$(AM_V_FC)$(LTFCCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-fmodDATA: $(fmod_DATA)
	@$(NORMAL_INSTALL)
	@list='$(fmod_DATA)'; test -n "$(fmoddir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(fmoddir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(fmoddir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(fmoddir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(fmoddir)" || exit $$?; \
	done

uninstall-fmodDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(fmod_DATA)'; test -n "$(fmoddir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(fmoddir)'; $(am__uninstall_files_from_dir)
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(fmoddir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-fmodDATA install-includeHEADERS \
	install-pkgconfigDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-fmodDATA uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES uninstall-pkgconfigDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-fmodDATA install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-pkgconfigDATA install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-fmodDATA \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-pkgconfigDATA

.PRECIOUS: Makefile

.NOTPARALLEL:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
